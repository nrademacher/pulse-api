scalar DateTime

enum CC {
  ADV_ENG
  CES
  IOT
}

enum UserRoles {
  ADMIN
  PRODUCT_OWNER
  PROJECT_MANAGER
  TECHNICAL_LEAD
  SOFTWARE_DEVELOPER
}

enum UserEvents {
  SIGN_UP
  LOG_IN
}

type User {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  cc: CC!
  name: String
  verified: Boolean
  displayName: String
  bio: String
  role: UserRoles!
  chatsReceived: [Chat]
  chatsSent: [Chat]
  teams: [Team]
  projects: [Project]
  projectsOwned: [Project]
}

type Query {
  login(email: String!, password: String!): String
  self: User!
  userById(id: String!): User!
  userByEmail(email: String!): User!
  usersByRole(role: UserRoles!): [User!]!
  usersByCC(cc: CC!): [User!]!
}

type Mutation {
  signUpUser(email: String!, password: String!, cc: CC!, name: String, displayName: String, bio: String, role: UserRoles): User!
  verifyUser(userEmail: String!): User!
  changeUserRole(userEmail: String!, newRole: UserRoles!): User!
  changeUserDisplayName(userEmail: String!, newDisplayName: String!): User!
  changeUserBio(userEmail: String!, newBio: String!): User!
}

type Subscription {
  subscribeToUserEvent(event: UserEvents!): User
}
