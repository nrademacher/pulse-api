// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String       @id @default(cuid())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  email         String       @unique
  name          String?
  password_hash String?
  collections   Collection[] @relation(name: "CollectionToUser")

  @@map("users")
}

model Collection {
  id        String   @id @default(cuid())
  user      User     @relation(name: "CollectionToUser", fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  boards    Board[]  @relation(name: "BoardToCollection")

  @@map("collections")
}

model Board {
  id           String     @id @default(cuid())
  collection   Collection @relation(name: "BoardToCollection", fields: [collectionId], references: [id])
  collectionId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  title        String
  lists        List[]     @relation(name: "BoardToList")

  @@map("boards")
}

model List {
  id        String   @id @default(cuid())
  board     Board    @relation(name: "BoardToList", fields: [boardId], references: [id])
  boardId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  cards     Card[]   @relation(name: "CardToList")

  @@map("lists")
}

model Card {
  id        String   @id @default(cuid())
  list      List     @relation(name: "CardToList", fields: [listId], references: [id])
  listId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?

  @@map("cards")
}
