// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Collection {
  id        String   @id @default(cuid())
  user      User     @relation(name: "CollectionToUser", fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  boards    Board[]  @relation(name: "BoardToCollection")

  @@map("collections")
}

model User {
  id              String       @id @default(cuid())
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  email           String       @unique
  name            String?
  passwordHash    String?
  team            String
  role            UserRoles    @default(SOFTWARE_DEVELOPER)
  displayName     String?
  bio             String?
  collections     Collection[] @relation(name: "CollectionToUser")
  tasksAssignedBy Task[]       @relation(name: "AssignerToTask")
  tasksAssignedTo Task[]       @relation(name: "AssigneeToTask")

  @@map("users")
}

model Board {
  id           String     @id @default(cuid())
  collection   Collection @relation(name: "BoardToCollection", fields: [collectionId], references: [id])
  collectionId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  title        String
  lists        List[]     @relation(name: "BoardToList")

  @@map("boards")
}

model List {
  id        String   @id @default(cuid())
  board     Board    @relation(name: "BoardToList", fields: [boardId], references: [id])
  boardId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  tasks     Task[]   @relation(name: "ListToTask")

  @@map("lists")
}

model Task {
  id          String   @id @default(cuid())
  list        List     @relation(name: "ListToTask", fields: [listId], references: [id])
  listId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  assignerId  String
  assigneeId  String
  assigner    User     @relation(name: "AssignerToTask", fields: [assignerId], references: [id])
  assignee    User     @relation(name: "AssigneeToTask", fields: [assigneeId], references: [id])
  title       String
  description String?
  done        Boolean

  @@map("tasks")
}

enum UserRoles {
  PRODUCT_OWNER
  PROJECT_MANAGER
  TECHNICAL_LEAD
  SOFTWARE_DEVELOPER
}
